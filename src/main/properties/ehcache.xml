<?xml version="1.0" encoding="UTF-8"?>
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="ehcache.xsd" updateCheck="false"
         monitoring="autodetect" dynamicConfig="true">
    <!--
        ehcache 的 物理保存路径

    <diskStore path="java.io.tmpdir/shiro-ehcache"/>
 -->
    <!--
        defaultCache:默认的缓存配置信息,如果不加特殊说明,则所有对象按照此配置项处理
        maxElementsInMemory:设置了缓存的上限,最多存储多少个记录对象
        eternal:代表对象是否永不过期
        overflowToDisk:当内存中Element数量达到maxElementsInMemory时，Ehcache将会Element写到   磁盘中
    -->
    <defaultCache maxElementsInMemory="10000"
                  eternal="false"
                  timeToIdleSeconds="600"
                  timeToLiveSeconds="1200"
                  overflowToDisk="true"
                  diskPersistent="true"
                  diskSpoolBufferSizeMB="10"
                  diskExpiryThreadIntervalSeconds="120"
                  memoryStoreEvictionPolicy="LFU"
    />

    <!--

    maxElementsInMemory ：cache 中最多可以存放的元素的数量。
                    如果放入cache中的元素超过这个数值，有两种情况：
                            1、若overflowToDisk的属性值为true，会将cache中多出的元素放入磁盘文件中。
                            2、若overflowToDisk的属性值为false，会根据memoryStoreEvictionPolicy的策略替换cache中原有的元素。

    maxElementsOnDisk：硬盘中最大缓存对象数，若是0表示无穷大
 
    eternal ：意思是是否永驻内存。
                如果值是true，cache中的元素将一直保存在内存中，不会因为时间超时而丢失，
                    所以在这个值为true的时候，timeToIdleSeconds和timeToLiveSeconds两个属性的值就不起作用了。
 
    timeToIdleSeconds ：就是访问这个cache中元素的最大间隔时间。
                            设定允许对象处于空闲状态的最长时间，以秒为单位。
                            当对象自从最近一次被访问后，如果处于空闲状态的时间超过了timeToIdleSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清空。
                            只有当eternal属性为false，该属性才有效。
                            如果该属性值为0，则表示对象可以无限期地处于空闲状态  

 
    timeToLiveSeconds : 这是cache中元素的生存时间。
                            设定对象允许存在于缓存中的最长时间，以秒为单位。
                            当对象自从被存放到缓存中后，如果处于缓存中的时间超过了 timeToLiveSeconds属性值，这个对象就会过期，EHCache将把它从缓存中清除。
                            只有当eternal属性为false，该属性才有效。
                            如果该属性值为0，则表示对象可以无限期地存在于缓存中。
                            timeToLiveSeconds必须大于timeToIdleSeconds属性，才有意义  

 
    overflowToDisk ：溢出是否写入磁盘。
                    系统会根据标签<diskStore path="java.io.tmpdir"/> 中path的值查找对应的属性值，
                        如果系统的java.io.tmpdir的值是 D:/temp，写入磁盘的文件就会放在这个文件夹下。
                        文件的名称是cache的名称，后缀名的data。如：CACHE_FUNC.data。
                        这个属性在解释maxElementsInMemory的时候也已经说过了。
 
    diskSpoolBufferSizeMB：磁盘缓存区大小，默认为30MB。每个Cache都应该有自己的一个缓存区。

    diskPersistent：是否缓存虚拟机重启期数据

    diskExpiryThreadIntervalSeconds  ：磁盘缓存的清理线程运行间隔
                                            多长时间清理一次缓存（默认120秒）
 
    memoryStoreEvictionPolicy ：内存存储与释放策略。
                有三个值：
                    LRU －least recently used    （最近最少使用，默认策略）
                    LFU －least frequently used  （最少访问次数）
                    FIFO－first in first out, the oldest element by creation time （先进先出）
 
    diskPersistent ： 是否持久化磁盘缓存。
            当这个属性的值为true时，系统在初始化的时候会在磁盘中查找文件名为cache名称，后缀名为index的的文件，如CACHE_FUNC.index 。
            这个文件中存放了已经持久化在磁盘中的cache的index，找到后把cache加载到内存。
            要想把cache真正持久化到磁盘，写程序时必须注意，在是用net.sf.ehcache.Cache的void put (Element element)方法后要使用void flush()方法。

    -->
    <!--
        用户登陆缓存（activeSessionCache），最多10000个用户，缓存时间20分钟
    -->
    <cache name="activeSessionCache"
           maxEntriesLocalHeap="10000"      maxEntriesLocalDisk="10000"
           eternal="false"                  overflowToDisk="true"
           diskSpoolBufferSizeMB="5"        diskExpiryThreadIntervalSeconds="1200"      diskPersistent="true"
           timeToIdleSeconds="600"          timeToLiveSeconds="1200"
           memoryStoreEvictionPolicy="LFU"  transactionalMode="off"
    />


    <cache name="systemMenu" maxEntriesLocalHeap="10000"      maxEntriesLocalDisk="10000" />


</ehcache>